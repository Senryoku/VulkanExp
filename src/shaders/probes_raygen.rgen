/* Copyright (c) 2019-2020, Sascha Willems
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 the "License";
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#version 460
#extension GL_EXT_ray_tracing : enable

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 6, set = 0, r11f_g11f_b10f) uniform image2D color;
layout(binding = 7, set = 0, rg16f) uniform image2D depth;

struct rayPayload {
	vec3 raydx;
	vec3 raydy;

	vec3 color; // Result
};

layout(location = 0) rayPayloadEXT rayPayload payload;

void main() 
{
	//gl_LaunchIDEXT.xy

	vec4 origin = vec4(0, 10, 0, 1);
	vec4 direction = vec4(1, 0, 0, 1);

	float tmin = 0.001;
	float tmax = 100000.0;

    payload.color = vec3(1.0, 0.0, 0.0);

	payload.raydx = normalize(vec3(1.1, 0, 0));

	payload.raydy = normalize(vec3(1, 0.1, 0));

	traceRayEXT(topLevelAS, gl_RayFlagsOpaqueEXT, 0xff, 0, 0, 0, origin.xyz, tmin, direction.xyz, tmax, 0);

	imageStore(color, ivec2(gl_LaunchIDEXT.xy), vec4(payload.color, 1.0));
}
